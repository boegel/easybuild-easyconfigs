easyblock = 'PythonPackage'

name = 'mpi4py'
version = '3.0.3'
local_label = 'timed-pingpong'
versionsuffix = '-Python-%%(pyver)s-%s' % local_label

homepage = 'https://bitbucket.org/mpi4py/mpi4py'
description = """MPI for Python (mpi4py) provides bindings of the Message Passing Interface (MPI) standard for
 the Python programming language, allowing any Python program to exploit multiple processors."""

toolchain = {'name': 'iimpi', 'version': '2020a'}

source_urls = [PYPI_SOURCE]
sources = [SOURCE_TAR_GZ]
patches = ['mpi4py-3.0.0_%s.patch' % local_label]
checksums = [
    '012d716c8b9ed1e513fcc4b18e5af16a8791f51e6d1716baccf988ad355c5a1f',  # mpi4py-3.0.3.tar.gz
    '185fbf0943373ea409ab8caafd4a854b5e035a7a5352c08588230cf2470b1b25',  # mpi4py-3.0.0_timed-pingpong.patch
]

dependencies = [('Python', '3.8.2')]

# force rebuilding everything, including patched files
preinstallopts = "python setup.py build --force && "

download_dep_fail = True
use_pip = True

# check that timed pingpong routines that are added via the patch are available
sanity_check_commands = [
    'mpirun -np 1 python -c "from mpi4py.MPI import Comm; import sys; sys.exit((1, 0)[\'PingpongRS\' in dir(Comm)])"',
]

sanity_pip_check = True

moduleclass = 'lib'
